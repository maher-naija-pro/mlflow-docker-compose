
services:
  postgres:
    image: postgres:17.5
    container_name: mlflow_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflow_pass
      POSTGRES_DB: mlflow_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio:RELEASE.2025-07-23T15-54-02Z
    container_name: mlflow_minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio_pass
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
  mc:
        image:  minio/minio:RELEASE.2025-07-23T15-54-02Z 
        depends_on:
            - minio
        container_name: mc
        entrypoint: >
            /bin/sh -c "
            /usr/bin/mc alias set minio http://minio:9000 minio minio_pass &&
            /usr/bin/mc mb minio/mlflow;
            exit 0;
            "

  mlflow:
    build:
      context: . 
      dockerfile: Dockerfile
    container_name: mlflow_server
    restart: unless-stopped
    depends_on:
      - postgres
      - minio
    environment:
      # use psycopg3 driver in the URL
      MLFLOW_TRACKING_URI: postgresql+psycopg://mlflow:mlflow_pass@postgres:5432/mlflow_db
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio_pass
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    command: >
      mlflow server
      --backend-store-uri postgresql+psycopg://mlflow:mlflow_pass@postgres:5432/mlflow_db
      --default-artifact-root s3://mlflow/
      --host 0.0.0.0
      --port 5000
    ports:
      - "5000:5000"


volumes:
  postgres_data:
  minio_data:
  mlflow_data:

